import sys
from collections import deque
input = sys.stdin.readline

n = int(input())
dp = [0]*(n+1) # 건물짓는데 소요시간 최종
poss = [[] for _ in range(n+1)]
t = [0]*(n+1) # 건물 소요시간
indegree = [0]*(n+1) # 진입차수(노드로 들어오는 간선수)

for i in range(1, n+1) :
    _input = list(map(int, input().split()))
    t[i] = _input[0]
    for x in _input[1:-1] :
        poss[x].append(i)
        indegree[i] += 1

def topology_sort() :
    q = deque()
    for i in range(1, len(indegree)) :
        if indegree[i] == 0 :
            q.append(i)
    while q :
        now = q.popleft()
        dp[now] += t[now]
        for cnt in poss[now] :
            indegree[cnt] -= 1
            dp[cnt] = max(dp[cnt], dp[now])
            if indegree[cnt] == 0 :
                q.append(cnt)

topology_sort()
for sol in dp[1:] :
    print(sol)
