import sys
from collections import deque
input = sys.stdin.readline

t = int(input())
for _ in range(t) :
    n, k = map(int, input().split()) # 건물수, 건설규칙
    t = [0]+list(map(int, input().split()))
    dp = [0]*(n+1) # 건물짓는데 소요시간 최종
    poss = [[] for _ in range(n+1)]
    indegree = [0]*(n+1) # 진입차수(노드로 들어오는 간선수)
    for _ in range(k) :
        a, b = map(int,input().split())
        poss[a].append(b)
        indegree[b] += 1
    flag = int(input())
    q = deque()
    for i in range(1, len(indegree)) :
        if indegree[i] == 0 :
            q.append(i)
    while q :
        now = q.popleft()
        dp[now] += t[now]
        for cnt in poss[now] :
            indegree[cnt] -= 1
            dp[cnt] = max(dp[cnt], dp[now])
            if indegree[cnt] == 0 :
                q.append(cnt)
    print(dp[flag])
