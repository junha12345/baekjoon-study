import sys
import heapq
input = sys.stdin.readline

# sol = 다익스트라 + visited를 통해 왕복운동? (1->a, a->1 = 시간초과)
# sol2 = 1->a->1 한번에 다익스트라를 구현하는 방법?
# 1 = 시작점
n, m = map(int, input().split())
visited = [0]*(n+1)
graph = [[] for _ in range(n+1)]
for _ in range(m) :
    a, b, c, d = map(int, input().split())
    graph[a].append([b, c])
    graph[b].append([a, d])

def dijkstra(start) :
    q = []
    heapq.heappush(q, [0, start])
    dp[start] = 0
    while q :
        dist, node = heapq.heappop(q)
        if dist > dp[node] :
            continue
        for i in graph[node] :
            cost = dp[node] + i[1]
            if cost < dp[i[0]] :
                dp[i[0]] = cost
                heapq.heappush(q, [cost, i[0]])
