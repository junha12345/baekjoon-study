import sys
input = sys.stdin.readline

INF = int(1e9)
t = int(input())
# idea =  같은 cost로 더 작은 time 저장
for _ in range(t) :
    n, m, k = map(int, input().split()) # 공항수, 돈, 길
    graph = [[] for _ in range(n+1)]
    for _ in range(k) :
        a, b, c, t = map(int, input().split())
        graph[a].append([b, c, t]) # graph[a] = to b, cost, time
    dp = [[INF for _ in range(m+1)] for _ in range(n+1)] # dp[node][cost] = time
    dp[1][0] = 0
    for i in range(m+1) : # 0원부터 m원까지
        for j in range(1, n+1) : # 1번공항부터 n번공할까지
            if dp[j][i] == INF : continue
            t = dp[j][i]
            for nn,nc,nt in graph[j] : 
                if nc+i > m : continue
                dp[nn][nc+i] = min(dp[nn][nc+i], t+nt)
    if min(dp[n]) == INF : print("Poor KCM")
    else : print(min(dp[n]))
