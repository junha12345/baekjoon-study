import sys
input = sys.stdin.readline

n, m, k = map(int, input().split())
price = list(map(int, input().split()))
day = []
dp = []
# 가격이 올라가는 시점에 구매(초기 케이스) 산 다음날 매도가능
for i in range(1, n) :
    if price[i] > price[i-1] :
        day.append(i-1)
# day날에 사고 다음날 팔고 반복, 대출은 항상 풀로
if min(price) <= m*(k+1) :
    if len(day) != 0 :
        for i in day :
            pm = m*k
            m += pm
            m = (m//price[i])*price[i+1]+m%price[i]-pm
        for j in range(i+1,n-1) :
            if m*(k+1)-(price[j]-price[j+1])*((m*(k+1))//price[j]) > m :
                dp.append(m*(k+1)-(price[j]-price[j+1])*(m*(k+1)//price[j]))
        if len(dp) == 0 :
            m += pm
        else :
            m = max(dp)
    else :
        for j in range(0,n-2) :
            if m*(k+1)-(price[j]-price[j+1])*((m*(k+1))//price[j]) > m :
                dp.append(m*(k+1)-(price[j]-price[j+1])*(m*(k+1)//price[j]))
        m = max(dp)
print(m)
