import sys
input = sys.stdin.readline
INF = int(1e9)

n = int(input())
m = int(input())
mis = [[]]
for _ in range(m) :
    # mis[i] = I번째 사건의 [X,Y]
    mis.append(list(map(int, input().split())))
print(mis)
# dp[i][j] = d # a가 i번쨰 사건 위치, b가 j번째 사건위치에 있을때 최소거리 d
dp = [[INF]*(1001) for _ in range(1001)]
dp[0][1] = abs(n-mis[1][0])+abs(n-mis[1][1])
dp[1][0] = abs(1-mis[1][0])+abs(1-mis[1][1])
for i in range(2,m+1) : # i번째 사건을 맡음
    for j in range(i-1) :
        if dp[i-1][j] != INF :
            if j == 0 :
                dp[i][j] = dp[i-1][j]+abs(mis[i][0]-mis[i-1][0])+abs(mis[i][1]-mis[i-1][1])
                dp[i-1][i] = dp[i-1][j]+abs(mis[i][0]-n)+abs(mis[i][1]-n)
            else :
                dp[i][j] = dp[i-1][j]+abs(mis[i][0]-mis[i-1][0])+abs(mis[i][1]-mis[i-1][1])
                dp[i-1][i] = dp[i-1][j]+abs(mis[i][0]-mis[j][0])+abs(mis[i][1]-mis[j][1])
        if dp[j][i-1] != INF :
            if j == 0 :
                dp[j][i] = dp[j][i-1]+abs(mis[i][0]-mis[i-1][0])+abs(mis[i][1]-mis[i-1][1])
                dp[i][i-1] = dp[j][i-1]+abs(mis[i][0]-1)+abs(mis[i][1]-1)
            else :
                dp[j][i] = dp[j][i-1]+abs(mis[i][0]-mis[i-1][0])+abs(mis[i][1]-mis[i-1][1])
                dp[i][i-1] = dp[j][i-1]+abs(mis[i][0]-mis[j][0])+abs(mis[i][1]-mis[j][1])
ans = set()
for i in range(m) :
    if dp[m][i] != INF : ans.add(dp[m][i])
    if dp[i][m] != INF : ans.add(dp[i][m])
print(ans)
print(min(ans))
