import sys

n = int(input())
INF = int(1e9)
dp = [[INF] * (1 << n) for _ in range(n)]
graph = []
for _ in range(n) :
  graph.append(list(map(int, sys.stdin.readline().split())))

# 출발위치 0, 현재위치 x, 방문한 곳(2) visited
def Dfs(x, visited) :
  #전체 방문완료
  if visited == (1 << n) -1 :
    if graph[x][0] :
      return graph[x][0]
    else :
      return INF
  #이미 방문하여 최소비용 구함
  if dp[x][visited] != INF :
    return dp[x][visited]
#도시 탐방
  for i in range(1, n) :
    if not graph[x][i] :
      continue
    if visited & (1 << i) :
      continue
    dp[x][visited] = min(dp[x][visited], Dfs(i, visited | 1 << i) + graph[x][i])

  return dp[x][visited]

print(Dfs(0,1))
