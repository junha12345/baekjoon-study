import sys
input = sys.stdin.readline

INF = int(1e9)
n = int(input())
sy, mx = map(int, input().split()) # y, max x value
nlist = []
for _ in range(n) :
    nlist.append(list(map(int, input().split())))
nlist.sort(key=lambda x: x[0])
# y좌표, 이동거리(위,아래)
# 동일 y좌표에서 이동거리가 짧은것을 선택
# 2차원 딕셔너리 1key = idx, 2key = y, value = distance
s = {}
idx = -1
s.setdefault(idx, {})
s[idx].setdefault(sy, [])
s[idx][sy].append(0)
idx += 1
while idx != n :
    s.setdefault(idx, {})
    for y in s[idx-1] :
        d = s[idx-1][y][0]
        if nlist[idx][1]<y<nlist[idx][2] :
            s[idx].setdefault(nlist[idx][1], [])
            s[idx].setdefault(nlist[idx][2], [])
            s[idx][nlist[idx][1]].append(d+y-nlist[idx][1])
            s[idx][nlist[idx][2]].append(d+nlist[idx][2]-y)
            s[idx][nlist[idx][1]].sort()
            s[idx][nlist[idx][2]].sort()
        else :
            s[idx].setdefault(y, [])
            s[idx][y].append(d)
            s[idx][y].sort()
    del s[idx-1]
    idx += 1
cnt = INF
ans = []
for k in s[n-1] :
    if s[n-1][k][0] < cnt :
        cnt = s[n-1][k][0]
        ans = []
        ans.append(k)
    elif s[n-1][k][0] == cnt : ans.append(k)
print(cnt+mx)
print(len(ans), *ans)
