import sys
input = sys.stdin.readline

def find_r(x) :
    if x == route[x] : return x
    route[x] = find_r(route[x])
    return route[x]

def union_r(x, y) :
    x = find_r(x)
    y = find_r(y)
    if x == y : return
    if rank_r[x] < rank_r[y] : a, b = y, x
    else : a, b = x, y
    if rank_r[x] == rank_r[y] : rank_r[b] += 1
    route[a] = b

n, m, k = map(int, input().split())
route = [i for i in range(n+1)]
friend = [[] for _ in range(n+1)]
rank_r = [1]*(n+1)
for _ in range(m) :
    a, b = map(int, input().split())
    friend[a].append(b)
    friend[b].append(a)
for _ in range(k) :
    a, b = map(int, input().split())
    union_r(a, b)
q = int(input())
for _ in range(q) :
    rq = list(map(str, input().split()))
    if rq[0] == '?' :
        cnt = 0
        p = int(rq[1])
        for i in friend[p] :
            if find_r(p) == find_r(i) : cnt += 1
        print(cnt)
    elif rq[0] == 'F' :
        a, b = list(map(int, rq[1:]))
        friend[a].append(b)
        friend[b].append(a)
    else :
        a, b = list(map(int, rq[1:]))
        union_r(a, b)
