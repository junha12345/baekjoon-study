import sys
input = sys.stdin.readline

# tuple에서는 요소값을 바로 사용가능
def ccw(p1,p2,p3) :
    x1, y1 = p1
    x2, y2 = p2
    x3, y3 = p3
    idx = (x2-x1)*(y3-y1)-(x3-x1)*(y2-y1)
    if idx>0 : return True #시 반
    else : return False #시

n = int(input())
dots = []
police = []
for _ in range(n) :
    dots.append(tuple(map(int, input().split())))
ans = dots.copy()
m = int(input())
for _ in range(m) :
    police.append(tuple(map(int, input().split())))
# 모노톤 체인 방식(top, bottom)
for pl in police :
    dots.append(pl)
    dots.sort() # xmin -> ymin 정렬
    bch, tch = [], []
    bch.append(dots[0])
    bch.append(dots[1])
    for i in range(2, n+1) :
        bch.append(dots[i])
        p = True
        while p and len(bch) > 2 :
            d1 = bch.pop()
            d2 = bch.pop()
            if ccw(bch[-1], d2, d1) :
                bch.append(d2)
                bch.append(d1)
                p = False
            else : bch.append(d1)       
    tch.append(dots[-1])
    tch.append(dots[-2])
    for i in range(n-2, -1, -1) :
        tch.append(dots[i])
        p = True
        while p and len(tch) > 2 :
            d1 = tch.pop()
            d2 = tch.pop()
            if ccw(tch[-1], d2, d1) :
                tch.append(d2)
                tch.append(d1)
                p = False
            else : tch.append(d1)     
    bch.pop() # 중복삭제
    ch = bch+tch
    # sol = 경찰을 추가한 후 다시 ch를 구성한 상태에서 중복된 점들을 삭제
    overlap = list(set(ans)-set(ch))
    print(ans)
