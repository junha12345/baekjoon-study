import sys
import math
input = sys.stdin.readline

def ccw(p1,p2,p3) :
    x1, y1 = p1[0],p1[1]
    x2, y2 = p2[0],p2[1]
    x3, y3 = p3[0],p3[1]
    idx = (x2-x1)*(y3-y1)-(x3-x1)*(y2-y1)
    if idx>0 : return 1 #시 반
    elif idx == 0 : return 0 #직선
    else : return -1 #시

def distance(p1, p2) :
    x1, y1 = p1[0], p1[1]
    x2, y2 = p2[0], p2[1]
    return math.sqrt((x1-x2)**2+(y1-y2)**2)

def angle(p1,p2,p3) :
    x1, y1 = p1[0], p2[0]
    x2, y2 = p2[0], p2[1]
    x3, y3 = p3[0], p3[1]
    if x1-x2 == 0 :
        return math.atan((y3-y1)/(x3-x1))
    elif x2-x3 == 0 :
        return math.atan(y1/x1)
    else :
        ang = (math.atan((y1-y2)/(x1-x2))-math.atan((y3-y2)/(x3-x2)))
        return abs(ang)

n, l = map(int, input().split())
nlist = []
for _ in range(n) :
    nlist.append(list(map(int, input().split()))) # x,y,ang
nlist.sort(key=lambda x: (x[0],x[1]))
start = nlist[0]
nlist.remove(start)
inf = []
# x가 가장작은걸로 선택 --> 기울기가 0인 부분은 가장 마지막 부분임
for i in range(n-1) :
    if start[0] == nlist[i][0] : inf.append(nlist[i])
    else : nlist[i].append((start[1]-nlist[i][1])/(start[0]-nlist[i][0]))
for dlist in inf :
    nlist.remove(dlist)
nlist.sort(key=lambda x: x[2])
for plist in inf :
    nlist.append(plist)
stack = []
stack.append(start)
stack.append(nlist[0])
for i in range(1,n-1) :
    if ccw(stack[-2],stack[-1],nlist[i])>0 : 
        stack.append(nlist[i])
    elif ccw(stack[-2],stack[-1],nlist[i])<0 :
        while 1 :
            stack.pop()
            if ccw(stack[-2],stack[-1],nlist[i])>=0 : break
        stack.append(nlist[i])
    else :
        if distance(stack[-2],nlist[i])>distance(stack[-1], nlist[i]) :
            stack.pop()
            stack.append(nlist[i])
# 세 점 사이각도가 180도인 경우에는 +abs(x1-x3)
# 세 점 사이각도가 180보다 작은경우 +(ang*L+abs(x1-x2)+abs(x2-x3))
# 마지막에 2로 나눈 후 반올림
dellist = []
for i in range(1,len(stack)-1) :
    if ccw(stack[-i],stack[-(i+1)],stack[-(i+2)]) == 0 : dellist.append(stack[-(i+1)])
for d in dellist : stack.remove(d)
print(stack)
ans = 0
for i in range(len(stack)) :
    if i == len(stack)-2 : p1, p2, p3 = stack[i], stack[i+1], stack[0]
    elif i == len(stack)-1 : p1, p2, p3 = stack[i], stack[0], stack[1]
    else : p1, p2, p3 = stack[i], stack[i+1], stack[i+2]
    print(angle(p1,p2,p3))
    ans += distance(p1,p2)+distance(p2,p3)+angle(p1,p2,p3)*l
    print(ans)
print(round(ans/2))
