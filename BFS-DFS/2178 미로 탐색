import sys
from collections import deque
input= sys.stdin.readline
    
def bfs(a,b) :
    q = deque()
    q.append([a,b])
    while q :
        x,y = q.popleft()
        for i in range(4) :
            nx = x+dx[i]
            ny = y+dy[i]
            if 0<=nx<m and 0<=ny<n and graph[ny][nx]==1 and visited[ny][nx]==0 :
                val[ny][nx] = val[y][x]+1
                visited[ny][nx] = 1
                q.append([nx,ny])
                
                
n, m = map(int, input().split()) # m*m
graph = []
visited = [[0]*m for _ in range(n)]
val = [[0]*m for _ in range(n)]
val[0][0] = 1
for _ in range(n) :
    graph.append(list(map(int, input().strip())))
dx = [0,0,-1,1]
dy = [-1,1,0,0]
bfs(0,0)
print(val[n-1][m-1])
