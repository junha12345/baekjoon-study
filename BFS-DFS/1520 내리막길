#BFS & Priority Queue

import sys
from collections import deque
from heapq import heappush, heappop, heapify

input = sys.stdin.readline
n, m = map(int, input().split())
num = []

for i in range(n) :
    num.append(list(map(int, input().split())))

dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]
visited = [[0]*m for _ in range(n)]

def bfs(now, x, y) :
    global visited
    queue = []
    heapify(queue)
    visited[y][x] = 1
    heappush(queue, (-now, x, y))
    while queue :
        now, x, y = heappop(queue)
        now *= -1
        if x == m-1 and y == n-1 :
            continue
        for i in range(4) :
            nx, ny = x + dx[i], y + dy[i]
            if 0 <= nx < m and 0 <= ny < n :
                if num[ny][nx] < now :
                    if visited[ny][nx] == 0 :
                        heappush(queue, (-num[ny][nx], nx, ny))
                    visited[ny][nx] += visited[y][x]

bfs(num[0][0], 0, 0)
print(visited[n-1][m-1])
