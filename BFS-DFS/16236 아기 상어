import sys
from collections import deque
input = sys.stdin.readline

def bfs(a, b, size, eat) : # 물고기 먹을때마다 그 자리에서 bfs돌림
    global time
    q = deque() ; ans = []
    visited = [[0]*n for _ in range(n)]
    q.append((a, b))
    visited[a][b] = 1
    while q :
        x, y = q.popleft()
        for i in range(4) :
            nx = x + dx[i] ; ny = y + dy[i]
            if -1<nx<n and -1<ny<n and visited[nx][ny] == 0 and size>=graph[nx][ny] :
                visited[nx][ny] = visited[x][y] + 1
                if size > graph[nx][ny] and graph[nx][ny] != 0:
                    ans.append([nx, ny, visited[nx][ny]])
                q.append((nx, ny))
    if ans :
        ans.sort(key = lambda x: (-x[2], -x[0], -x[1]))
        m_a, m_b, dist = ans.pop()
        eat += 1
        if eat == size :
            size += 1
            eat = 0
        time += dist
        graph[m_a][m_b] = 0
        bfs(m_a, m_b, size, eat)
        return
    return
    
n = int(input())
time = 0
graph = []
for _ in range(n) :
    graph.append(list(map(int, input().split())))
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1] # 상하좌우
for i in range(n) :
    for j in range(n) :
        if graph[i][j] == 9 :
            graph[i][j] = 0
            bfs(i, j, 2, 0)
            break
print(time)
