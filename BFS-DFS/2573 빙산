import sys
import heapq
input = sys.stdin.readline

n, m = map(int, input().split())
graph = []
for i in range(n) :
    graph.append(list(map(int, input().split())))

def bfs(a,b) :
    global cnt
    q = []
    heapq.heappush(q, ([a, b]))
    while q :
        x, y = heapq.heappop(q)
        for i in range(4) :
            nx = x + dx[i]
            ny = y + dy[i]
            if 0<=nx<n and 0<=ny<m and visited[nx][ny] == 0 :
                if graph[nx][ny] <= 0 :
                    graph[x][y] -= 1
                else :
                    visited[nx][ny] = 1
                    heapq.heappush(q, ([nx, ny]))
    cnt += 1
    return

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
year = 0
cnt = 0
while True:
    cnt = 0
    visited = [[0]*m for _ in range(n)]
    for i in range(n) :
        for j in range(m) :
            if graph[i][j] <= 0 or visited[i][j] == 1 :
                continue
            visited[i][j] = 1
            if graph[i][j] > 0 :
                bfs(i,j)
    if cnt == 0 :
        print(0)
        break
    elif cnt > 1:
        print(year)
        break
    year += 1
