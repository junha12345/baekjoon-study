import sys
from collections import deque
input= sys.stdin.readline
INF = int(1e9)

def bfs(a,b,c) :
    q = deque()
    q.append([a,b,c])
    while q :
        x,y,cnt = q.popleft()
        if cnt>0 :
            for i in range(8) :
                nx=x+hx[i]
                ny=y+hy[i]
                if 0<=nx<n and 0<=ny<m and graph[ny][nx]==0 and val[cnt-1][ny][nx]==0 :
                    val[cnt-1][ny][nx]=val[cnt][y][x]+1
                    q.append([nx,ny,cnt-1])
                if nx==n-1 and ny==m-1 :
                    return
        for i in range(4) :
            nx=x+dx[i]
            ny=y+dy[i]
            if 0<=nx<n and 0<=ny<m and graph[ny][nx]==0 and val[cnt][ny][nx]==0 :
                q.append([nx,ny,cnt])
                val[cnt][ny][nx]=val[cnt][y][x]+1
            if nx==n-1 and ny==m-1 :
                return
            
k=int(input())
n, m = map(int, input().split()) #가,세
dx=[0,0,-1,1]
dy=[-1,1,0,0]
hx=[-1,-2,-2,-1,1,2,2,1]
hy=[-2,-1,1,2,2,1,-1,-2]
val = [[[0]*n for _ in range(m)]for _ in range(k+1)]
graph=[]
ans=INF
for _ in range(m) :
    graph.append(list(map(int, input().split())))
if n==1 and m==1 :
    print(0)
    exit(0)
bfs(0,0,k) 
for i in range(k+1) :
    if val[i][m-1][n-1]!=0 :
    	ans=min(ans,val[i][m-1][n-1])
print(-1 if ans==INF else ans)
