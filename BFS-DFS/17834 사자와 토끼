import sys
input = sys.stdin.readline
sys.setrecursionlimit(10**5)

def dfs(s,idx) :
    visited[s] = 1
    check[s] = idx
    for x in graph[s] :
        if visited[x] :
            if check[x] == idx :
                print(0)
                exit(0)
        else :
            dfs(x,idx^1)
    return True
    
n, m = map(int, input().split())
graph = [[] for _ in range(n+1)]
for _ in range(m) :
    x, y = map(int, input().split())
    graph[x].append(y)
    graph[y].append(x)
visited = [0]*(n+1)
check = [0]*(n+1) # 홀짝성 판단 만약, 홀짝이 겹치면 불가능한 경우
ans = 0
dfs(1,1)
for i in range(1,n+1) :
    if check[i] == 1 :
        ans += 1
print(ans*(n-ans)*2)
