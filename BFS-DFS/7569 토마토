import sys
from collections import deque
input = sys.stdin.readline

graph = []
q = deque()
m, n, h = map(int, input().split())
for i in range(h) :
    sol = [] # 1 찾은 후 graph에 입력
    for j in range(n) :
        sol.append(list(map(int, input().split())))
        for k in range(m) :
            if sol[j][k] == 1 :
                q.append([i, j, k])
    graph.append(sol)

dx = [-1, 1, 0, 0, 0, 0] #상,하,좌,우,위,아래
dy = [0, 0, -1, 1, 0, 0]
dz = [0, 0, 0, 0, -1, 1]
while q :
    z, x, y = q.popleft()
    for i in range(6) :
        nx = x + dx[i]
        ny = y + dy[i]
        nz = z + dz[i]
        if 0<=nx<n and 0<=ny<m and 0<=nz<h and graph[nz][nx][ny] == 0 :
            graph[nz][nx][ny] = graph[z][x][y] + 1
            q.append([nz, nx, ny])

ycnt = 0
# 다 익을수있는 사황판단 -> graph상에 0이 있는지
for i in graph :
    for j in i :
        for k in j :
            if k == 0 :
                print(-1)
                exit(0)
        ycnt = max(ycnt, max(j))
print(ycnt-1)
