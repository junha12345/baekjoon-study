import sys
from collections import deque
input= sys.stdin.readline
    
def bfs() :
    while q :
        x,y=q.popleft()
        for i in range(4) :
            nx=x+dx[i]
            ny=y+dy[i]
            if 0<=nx<n and 0<=ny<m and graph[ny][nx]==0 :
                graph[ny][nx]=graph[y][x]+1
                q.append([nx,ny])
                
n,m= map(int, input().split()) #가,세
graph=[]
dx=[0,0,-1,1]
dy=[-1,1,0,0]
q = deque()
for _ in range(m) :
    graph.append(list(map(int, input().split())))
for y in range(m) :
    for x in range(n) :
        if graph[y][x]==1 :
            q.append([x,y])
bfs()
flag=0
ans=0
for i in range(m) :
    for j in range(n) :
        if graph[i][j]==0 :
            flag=1
        else :
            ans=max(ans,graph[i][j])
if flag==1 :
    print(-1)
else :
    print(ans-1)
