import sys
input = sys.stdin.readline
sys.setrecursionlimit(10**5)
def find(x) :
    return parents[x][0]

def dfs(start, dept) :
    dept += 1
    for i in node[start] :
        if parents[start][0] == i : continue
        parents[i] = [start, dept]
        dfs(i, dept)

t = int(input())
for _ in range(t) :
    n = int(input())
    node = [[]for _ in range(n+1)]
    parents = [[0, 0] for _ in range(n+1)] # ë¶€ëª¨, dept
    rootn = [0]*(n+1)
    for _ in range(n-1) :
        a, b = map(int, input().split())
        node[a].append(b)
        node[b].append(a)
        rootn[b] += 1
    for i in range(1,n+1) :
        if rootn[i] == 0 :
            root = i
    parents[root][0] = root
    dfs(root, 0)
    x, y = map(int, input().split())
    if parents[x][1] > parents[y][1] :
        cnt = parents[x][1]-parents[y][1]
        for _ in range(cnt) :
            x = find(x)
    else :
        cnt = parents[y][1]-parents[x][1]
        for _ in range(cnt) :
            y = find(y)
    while x != y :
        y = find(y)
        x = find(x)
    print(x)
