import sys
from math import *
input = sys.stdin.readline
# sol = 쿼리를 다 저장하며 받은 후 좌표압축, 다시 쿼리를 이어나가며 세그트리 갱신

def update(k) :
    k += n
    tree[k] += 1
    while k>1 :
        k //= 2
        tree[k] = tree[2*k] + tree[2*k+1]
    
def sol(l,r) :
    l += n
    r += n
    cnt = 0
    while l<r :
        if l%2 == 1 :
            cnt += tree[l]
            l += 1
        if r%2 == 1 :
            cnt += tree[r-1]
            r -= 1
        l//=2
        r//=2
    return cnt

q = int(input())
idx = 1
nlist = set() # 값이 0일때 판단용
query = []
xlist = []
for _ in range(q) :
    a, *b = map(int, input().split())
    if a == 1 :
        x,y = b
        if x != 0 :
            xlist.append(ceil(-y/x))
            if y%x==0 :
                nlist.add(int(-y/x))
    else :
        xlist.append(b[0])
    query.append([a,*b])
xlist = sorted(set(xlist))
xdict = {xlist[i]:i for i in range(len(xlist))}
n = len(xdict)
idx = 1
tree = [0]*(2*n)
for i in range(q) :
    if len(query[i]) == 3 :
        z,x,y = query[i]
        if x==0 : 
            if y<0 : idx *= -1
            elif y==0 : idx *= 0
            continue
        elif x<0 : idx *= -1
        update(xdict[ceil(-y/x)])
    else :
        z,x = query[i]
        if x in nlist or idx == 0 : print("0")
        else :
            if xdict[x] == n-1 : cnt = 0
            else : cnt = sol(xdict[x]+1,n) #자기보다 큰거 개수
            if idx>0 and cnt%2==0 : print("+")
            elif idx>0 and cnt%2==1 : print("-")
            elif idx<0 and cnt%2==0 : print("-")
            elif idx<0 and cnt%2==1 : print("+")
            else : print("0")
